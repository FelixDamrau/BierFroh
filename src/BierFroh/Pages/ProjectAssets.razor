@page "/projectassets"

@using BierFroh.Components
@using BierFroh.Model
@using BierFroh.Modules.DependencyGraph
@using Blazor.Diagrams
@using Blazor.Diagrams.Core
@using Blazor.Diagrams.Core.Geometry
@using Blazor.Diagrams.Core.Models
@using Blazor.Diagrams.Components

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <MudText Typo="Typo.h3" GutterBottom="true">Project Assets Graph</MudText>
    <MudText Typo="Typo.body1">This is still in a test phase. Expect crashes... 🐱‍👓</MudText>
    <MudText Typo="Typo.body1">If multiple frameworks are found, only the first one will be rendered.</MudText>
    <InputFile id="fileInput" OnChange="OnInputFileChange" hidden accept=".json" />

    <MudGrid>
        <MudItem xs="12" md="3" xl="2" Class="d-flex align-center justify-center mud-width-full py-4">
            <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Filled.UploadFile" for="fileInput">assets.json laden</MudButton>
        </MudItem>
        @if (projectAssets is not null)
        {
            <MudItem xs="12" md="3" xl="2" Class="d-flex align-center justify-center mud-width-full py-4">
                @if (projectAssets.Frameworks.Count != 0)
                {
                    <MudSelect T="string" Dense="true" Margin="Margin.None" @bind-Value="selectedFramework" HelperText="Select Framework">
                        @foreach (var framework in projectAssets.Frameworks)
                        {
                            <MudSelectItem Value="@framework">@framework</MudSelectItem>
                        }
                    </MudSelect>
                }
                else
                {
                    <MudSelect T="string" Disabled=true Label="No file loaded" HelperText="Select Framework" />
                }
            </MudItem>
        }
        @if (filterFactory is not null)
        {
            <MudItem xs="12" md="3" xl="2" Class="d-flex align-center justify-center mud-width-full py-4">
                <MudSelect T="string" MultiSelection="true" @bind-SelectedValues="selectedDependencyKeys" HelperText="Select Namespaces">
                    @foreach (var key in filterFactory.GetKeys().OrderBy(k => k))
                    {
                        <MudSelectItem T="string" Value="@key">@key (@filterFactory.Count(key))</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
        }
        @if (selectedFramework is not null && selectedDependencyKeys is not null)
        {
            <MudItem xs="12" md="3" xl="2" Class="d-flex align-center justify-center mud-width-full py-4">
                <MudButton HtmlTag="render" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Filled.Schema" OnClick="RenderDiagram">
                    Render Graph
                </MudButton>
            </MudItem>
        }
        <MudItem xs="12" Class="d-flex align-center justify-center mud-width-full py-8">
            <div style="width:80vw; height: 60vh">
                <CascadingValue Value="diagram">
                    <DiagramCanvas />
                </CascadingValue>
            </div>
        </MudItem>
    </MudGrid>
</MudContainer>
