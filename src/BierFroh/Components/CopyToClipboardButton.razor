@inject IJSRuntime jSRuntime;

<MudTooltip Text="Copy to clipboard">
    <MudButton StartIcon="@toggleIconName" Variant="Variant.Filled" OnClick="CopyToClipboard">Copy</MudButton>
</MudTooltip>

@code{
    private string toggleIconName = Icons.Material.Filled.ContentPaste;
    private string? copy;
    [Parameter]
    public string? Copy
    {
        get => copy;
        set
        {
            if (copy != value)
            {
                ValueChanged();
                copy = value;
                toggleIconName = Icons.Material.Filled.ContentPaste;
            }
        }
    }

    private void ValueChanged()
    {
        toggleIconName = Icons.Material.Filled.ContentPaste;
    }

    private async Task CopyToClipboard()
    {
        if (copy is null)
            return;

        // Writing to the clipboard may be denied, so you must handle the exception
        try
        {
            await jSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", copy);
            toggleIconName = Icons.Material.Filled.CheckCircle;
        }
        catch
        {
            Console.WriteLine("Cannot write text to clipboard");
        }
    }
}