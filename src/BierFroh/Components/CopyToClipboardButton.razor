@inject IJSRuntime jSRuntime;

<MudButton StartIcon="@toggleIconName" Variant="Variant.Filled" OnClick="CopyToClipboard">Copy</MudButton>

@code{
    private string toggleIconName = Icons.Material.Filled.ContentPaste;

    [Parameter]
    public string? Copy { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        toggleIconName = Icons.Material.Filled.ContentPaste;
    }

    private async Task CopyToClipboard()
    {
        if (Copy is null)
            return;

        // Writing to the clipboard may be denied, so you must handle the exception
        try
        {
            await jSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", Copy);
            toggleIconName = Icons.Material.Filled.CheckCircle;
        }
        catch
        {
            Console.WriteLine("Cannot write text to clipboard");
        }
    }
}